services:
  backend:
    container_name: backend
    build: backend
    ports:
      - "8000:8000"
    networks:
      - backend
    restart: unless-stopped

  grafana:
    container_name: grafana
    build: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_ALERTING_ENABLED=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_LOG_LEVEL=debug
      - GF_PLUGINS_PREINSTALL=grafana-clock-panel, grafana-simple-json-datasource
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped

  loki:
    container_name: loki
    build: loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3100 || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
    restart: unless-stopped

  promtail:
    container_name: promtail
    build: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped

networks:
  backend:
  monitoring:

volumes:
  grafana_data:
  loki_data: